#!/bin/bash

# Ensure we are running on a clean environment.
[ -v HOME ] && exec -c "$0" "$@"

set -a # Export vars
set -e # Die on errors

# Load dotenv file
if [ -f "$1" ]; then source "$1"; __out="$1.php"
elif [ "$1" == '-' ]; then source /dev/stdin; __out=/dev/stdout
elif [ -f ".env" ]; then source ".env"; __out=".env.php"
else echo "Missing .env" >> /dev/stderr; exit 1;
fi;

# Output override
if [ "$2" == '-' ]; then __out=/dev/stdout
elif [ ! -z "$2" ]; then __out="$2"
fi

# Dump current env as PHP
printf '<?php
// Generated by dotenv-to-php
$_DOTENV = ' > $__out
/usr/bin/env php -r '
	if (defined("PHP_VERSION_ID") && (PHP_VERSION_ID >= 70100)) $env = getenv(); 
	else {
		$env = array();
		ob_start(); phpinfo(INFO_ENVIRONMENT);
		$lines = explode("\n", trim(ob_get_clean()));
		for($i=5, $l=count($lines); $i<$l; $i++) {
			$parts = explode(" => ", $lines[$i], 2);
			$env[$parts[0]] = array_key_exists($parts[0], $_SERVER) ? $_SERVER[$parts[0]] : $parts[1];
		}
	}
	$ignore = array("PWD", "SHLVL", "_", "__out");
	$env = array_diff_key($env, array_flip($ignore));
	var_export($env);' >> $__out
echo ';' >> $__out
echo '$_ENV = array_merge($_ENV, $_DOTENV);' >> $__out
echo '$_SERVER = array_merge($_SERVER, $_DOTENV);' >> $__out
echo 'array_walk($_DOTENV, function($val, $key){ putenv("$key=$val"); });' >> $__out
